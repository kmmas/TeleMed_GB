spring.application.name=article-service

# Use environment variables with default fallbacks
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/article}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:mody_aly2020}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=${SERVER_PORT:8081}

# Eureka configuration
eureka.client.service-url.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true

# Kafka config with environment variable fallback
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
kafka.group.id=${KAFKA_GROUP_ID:article-service-group}
kafka.topic.doctor-events=${DOCTOR_TOPIC_NAME:doctor-events}